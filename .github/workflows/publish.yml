name: "Publish Application"
on:
  push:
    tags:
      - "*"
  pull_request:
    branches:
      - main
      - develop

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install setuptools wheel twine
        
    - name: Build
      env:
        GHRUN: ${{ github.run_id }}
        GHBRANCH: ${{ github.ref }}
        GHTAG: ${{ github.ref_name }}
      run: |
        python setup.py sdist bdist_wheel

    - name: Publish to pypi
      if: github.event_name != 'pull_request'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload --skip-existing dist/*
  
  build:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/hoglandets-it/beetl
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: print tags
        run: echo "${{ steps.meta.outputs.tags }}"

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: cloudynes
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: docker
          file: docker/Dockerfile
          push: true
          # Push to latest on main, otherwise push to the tag
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}